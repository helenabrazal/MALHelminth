setwd("C:/MALHelminth project/Paper1/MALHelminth_serology")

# Packages
{library(pacman)
  p_load(scales, ggplot2, tidyverse, dplyr, gtsummary, gt, labelled, haven, flextable, officer)}

## Data (file dependent on file generated on coinfections plot script)
mergeData_coinfections_table <- read.csv("C:/MALHelminth project/Paper1/mergeData_coinfections.csv")


## Remove missing data for specified variables
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  filter(Sexe != "")



table(mergeData_coinfections_table$Sexe)

## Relabel values using original variable names
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  mutate(
    Sexe = forcats::fct_recode(Sexe, "Female" = "F", "Male" = "M")
  )


#Coinfections tables-------------------------------

## Rename variables
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  rename(
    Age_category = Age_category,
    Sex = Sexe,
    Cryptosporidium_positive = cryptosporidium_pos,
    Malaria_protection_positive = malaria_protect_pos,
    Taenia_positive = taenia_pos,
    Recent_malaria_positive = malaria_recent_pos,
    Strongyloides_positive = Strongyloides_pos,
    Historical_malaria_positive = malaria_historical_pos,
    Schistosoma_positive = Smansoni_pos,
    Necator_positive = necator_pos,
    Giardia_positive = giardia_pos,
    Wash_malaria_coinfection = Wash_malaria_coinf,
    Helminth_malaria_coinf = Helminth_malaria_coinf,
    Protozoan_malaria_coinfection = Protozoan_malaria_coinf,
  )

# Relabel variables for labels
var_label(mergeData_coinfections_table) <- list(
  Age_category = "Age category", 
  Sex = "Sex", 
  Cryptosporidium_positive = "C. parvum exposure",
  Taenia_positive = "T. solium exposure",
  Recent_malaria_positive = "Recent P. falciparum exposure" ,
  Strongyloides_positive = "S. stercoralis exposure",
  Historical_malaria_positive = "Historical P. falciparum exposure",
  Malaria_protection_positive = "P. falciparum seroprotection",
  Schistosoma_positive = "S. mansoni exposure",
  Necator_positive = "N. americanus exposure" ,
  Giardia_positive = "G. lamblia  exposure" ,
  Wash_malaria_coinfection = "WASH pathogens+P. falciparum exposure",
  Helminth_malaria_coinf = "Helminths+P. falciparum  exposure",
  Protozoan_malaria_coinfection = "Intestinal protozoa+P. falciparum  exposure"
)


###### Start generating tables 

### Demographic table (descriptive)

table <- mergeData_coinfections_table %>% select(Age_category, Site, Sex)

# Create the gtsummary table
table_summ <- table %>% 
  tbl_summary(
    missing = "no",
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      all_categorical() ~ "{n} / {N} ({p}%)"
    ),
    digits = all_continuous() ~ 2
  )

# Convert the gtsummary object to a flextable
table_summ_flex <- as_flex_table(table_summ)

# Save the flextable as a Word document
flextable::save_as_docx(table_summ_flex, path = "table_summary.docx")

### Coinfections table
table_coinf_age <- mergeData_coinfections_table %>% select(
  Age_category, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive, 
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, Helminth_malaria_coinf, Protozoan_malaria_coinfection
)

table_coinf_Site <- mergeData_coinfections_table %>% select(
  Site, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive,
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, Helminth_malaria_coinf, Protozoan_malaria_coinfection
)


table_coinf_sex<- mergeData_coinfections_table %>% select(
  Sex, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive,
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, Helminth_malaria_coinf, Protozoan_malaria_coinfection
)

# Create the summary table and add p-values using t-test
summary_table_age <- table_coinf_age %>%
  tbl_summary(by = Age_category) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci()

summary_table_site <- table_coinf_Site %>%
  tbl_summary(by = Site) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci()

summary_table_sex <- table_coinf_sex %>%
  tbl_summary(by = Sex) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci()


#create flex tables
summary_table_age_flex <- as_flex_table(summary_table_age)
summary_table_site_flex <- as_flex_table(summary_table_site)
summary_table_sex_flex <- as_flex_table(summary_table_sex)


# Create a new Word document
# Initialize the document
doc <- read_docx()

# Add summary tables to the document
# Create and save Word document
doc <- read_docx() %>%
  body_add_par("Summary Table by Age Category", style = "heading 1") %>%
  body_add_flextable(summary_table_age_flex) %>%
  body_add_par("Summary Table by Site", style = "heading 1") %>%
  body_add_flextable(summary_table_site_flex) %>%
  body_add_par("Summary Table by Sex", style = "heading 1") %>%
  body_add_flextable(summary_table_sex_flex)

# Save the Word document
print(doc, target = "summary_tables.docx")


###########################################################
#Create tables summarising explanatory variables only--------------------------------------

setwd("C:/MALHelminth project/Paper1/MALHelminth_serology")

# Packages
{library(pacman)
  p_load(scales, ggplot2, tidyverse, dplyr, gtsummary, gt, labelled, haven, flextable, officer)}

# Read in epi covariates
covariate_data <- read.csv("C:/MALHelminth project/Paper1/MALHelminth_serology/covariate_data_complete.csv", stringsAsFactors = F)

# Ensure dichotomous variables are factors
covariate_data$electricity <- factor(covariate_data$electricity, levels = c("Yes", "No"))
covariate_data$radio <- factor(covariate_data$radio, levels = c("Yes", "No"))
covariate_data$motorbike <- factor(covariate_data$motorbike, levels = c("Yes", "No"))
#recode variables with multiple correlation values as we did for logistic regression
covariate_data <- covariate_data %>%   
  mutate(time_to_water = case_when(
    time_to_water %in% c("<5_minutes", "5-10_minutes", "10-14_minutes") ~ "<15 minutes",
    time_to_water == "15-30_minutes" ~ "15-30 minutes",
    time_to_water == ">30_minutes" ~ ">30 minutes",
    TRUE ~ time_to_water # this ensures that other values remain unchanged
  ))

covariate_data <- covariate_data %>%   
  mutate(water_contact = case_when(
    water_contact %in% c("Never", "Rarely") ~ "Rarely",
    water_contact == "Monthly" ~ "Unfrequently",
    water_contact %in% c("Weekly", "Daily") ~ "Frequently",
    TRUE ~ water_contact # this ensures that other values remain unchanged
  ))



#rename variables
covariate_data <- covariate_data %>%
  rename(
    Age_category = Age_category,
    Site = study_site,
    Sex = child_sex,
  )


# Remove columns "Sample" and "more_than_one_net" from covariate_data as Sample is not an explanatory variables and more_than_one_net has high multicollinearity with other variables
covariate_data <- covariate_data %>%
  select(-Sample, -more_than_one_net)

# Replace blank strings with NA across all columns
covariate_data[covariate_data == ""] <- NA

# Remove variations of "Unknown" (case insensitive and trim whitespace)
covariate_data <- covariate_data %>%
  mutate(across(everything(), ~ na_if(trimws(tolower(.)), "unknown")))  # Convert "unknown" to NA

# Convert relevant columns to factors and drop unused levels
covariate_data <- covariate_data %>%
  mutate(across(c(house_material, net_holes, net_used, wash_hands, water_source, shoe_wearing, Sex, net_available,
                  electricity, radio, motorbike, freq_wash_before_eat, time_to_water, eat_soil, hand_wash_area, space_between_walls), 
                ~ factor(., exclude = NULL))) %>%
  droplevels()  # Drop unused levels from all factor columns

#relabel variables for table display
var_label(covariate_data) <- list(
  Age_category = "Age category", 
  house_ownership = "House ownership", 
  house_material = "House material",
  net_holes = "Holes in net",
  net_used = "Use of net" ,
  toilet_type = "Toilet type",
  wash_hands = "Handwashing practice",
  water_contact = "Water contact",
  water_source = "Water source",
  shoe_wearing = "Shoe wearing" ,
  electricity = "Electricity",
  radio = "Radio",
  motorbike = "Motorbike",
  space_between_walls = "Space between walls",
  net_available = "Net available",
  hand_wash_area = "Handwashing area",
  freq_wash_before_eat = "Frequency of handwashing before eating" ,
  time_to_water = "Time to water",
  eat_soil = "Eat soil"
)

# Reorder levels of variables in covariate_data
covariate_data <- covariate_data %>%
  mutate(
    # Reorder levels for each variable as specified
    net_holes = fct_relevel(net_holes, "yes", "no"),
    net_used = fct_relevel(net_used, "every_night", "rarely", "never"),
    toilet_type = fct_relevel(toilet_type, "private_toilet", "shared_toilet", "pit_latrine", "no_toilet"),
    water_contact = fct_relevel(water_contact, "frequent", "infrequent", "rarely"),
    electricity = fct_relevel(electricity, "yes", "no"),
    radio = fct_relevel(radio, "yes", "no"),
    space_between_walls = fct_relevel(space_between_walls, "yes", "no"),
    net_available = fct_relevel(net_available, "yes", "no"),
    hand_wash_area = fct_relevel(hand_wash_area, "yes", "no"),
    freq_wash_before_eat = fct_relevel(freq_wash_before_eat, "always", "sometimes", "rarely", "never"),
    time_to_water = fct_relevel(time_to_water, "<15 minutes", "15-30 minutes", ">30 minutes"),
    eat_soil = fct_relevel(eat_soil, "yes", "no", "dont_know"),
    motorbike = fct_relevel(motorbike, "yes", "no"),
    water_contact = fct_relevel(water_contact, "frequently", "unfrequently", "rarely")
    
  )

# Arrange columns alphabetically
covariate_data <- covariate_data %>%
  select(sort(names(.)))  # Select columns in alphabetical order

# Create the summary table ensuring dichotomous variables are treated as categorical
summary_table_explanatory <- covariate_data %>%
  tbl_summary(
    by = Site,
    type = list(
      electricity ~ "categorical",
      radio ~ "categorical",
      motorbike ~ "categorical",
      space_between_walls~ "categorical",
      net_available~ "categorical",
      freq_wash_before_eat ~ "categorical",
      time_to_water ~ "categorical",
      hand_wash_area ~ "categorical",
      eat_soil ~ "categorical",
      net_holes ~ "categorical"
      
    )
  ) %>%
  add_overall() 


# Display the summary table
print(summary_table_explanatory)

##Save into as a word document 
summary_table_explanatory_flex <- as_flex_table(summary_table_explanatory)
flextable::save_as_docx(summary_table_explanatory_flex, path = "summary_table_explanatory.docx")



