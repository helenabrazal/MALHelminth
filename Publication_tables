setwd("C:/MALHelminth project/Paper1/MALHelminth_serology")

# Packages
{library(pacman)
  p_load(scales, ggplot2, tidyverse, dplyr, gtsummary, gt, labelled, haven, flextable)}

## Data
mergeData_coinfections_table <- read.csv("C:/MALHelminth project/Paper1/MALHelminth_serology/mergeData_coinfections.csv")


## Remove missing data for specified variables
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  drop_na(Util_lavage_mains, Sexe, walking_time_water, Contact_with_water, ITNets_Use, type_toilettes)

## Relabel values using original variable names
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  mutate(
    Sexe = recode(Sexe, "F" = "Female", "M" = "Male"),
    walking_time_water = recode(walking_time_water, 
                                "<5minutes" = "<5 minutes", 
                                "5to10minutes" = "5-10 minutes", 
                                "10to14minutes" = "10-14 minutes",
                                "15to30minutes" = "15-30 minutes", 
                                ">30minutes" = ">30 minutes"),
    Contact_with_water = recode(Contact_with_water, 
                                "Every_day" = "Every day", 
                                "Once_month" = "Once a month", 
                                "Once_week" = "Once a week", 
                                "rarely" = "Rarely", 
                                "Jamais" = "Never"),
    ITNets_Use = recode(ITNets_Use, "1to4timesAweek" = "1-4 times a week", "Evry_nigth" = "Every night", "rarely" = "Rarely", "jamais" = "Never"),
    type_toilettes = recode(type_toilettes, 
                            "1.Private" = "Private", 
                            "2.Shared_with_families" = "Shared with families", 
                            "3.Private_ext" = "Private exterior", 
                            "4.Pit_latrines" = "Latrines", 
                            "5.Others" = "Others", 
                            "6.No_toilets" = "No toilet"),
    Util_lavage_mains = recode(Util_lavage_mains, "1.Water_only" = "Wash with water only", "5.Soap_and_water" = "Wash with soap and water", "Others"="Others")
    
  )

## Set factor levels to ensure correct order in the table
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  mutate(
    walking_time_water = factor(walking_time_water, levels = c("<5 minutes", "5-10 minutes", "10-14 minutes", "15-30 minutes", ">30 minutes")),
    Contact_with_water = factor(Contact_with_water, levels = c("Every day", "Once a week", "Once a month", "Rarely", "Never")),
    ITNets_Use = factor(ITNets_Use, levels = c("Every night", "1-4 times a week", "Rarely", "Never")),
    Util_lavage_mains= factor(Util_lavage_mains, levels=c("Wash with soap and water", "Wash with water only", "Others"))
    )
  

## Rename variables
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  rename(
    Age_category = Age_cat,
    Gender = Sexe,
    Walking_time_from_water_source = walking_time_water,
    Water_contact_frequency = Contact_with_water,
    Hand_washing_habit = Util_lavage_mains,
    ITN_use_frequency = ITNets_Use,
    Type_of_toilet = type_toilettes,
    Cryptosporidium_positive = cryptosporidium_pos,
    Malaria_protection_positive = malaria_protect_pos,
    Taenia_positive = taenia_pos,
    Recent_malaria_positive = malaria_recent_pos,
    Strongyloides_positive = Strongyloides_pos,
    Historical_malaria_positive = malaria_historical_pos,
    Schistosoma_positive = Smansoni_pos,
    Necator_positive = necator_pos,
    Giardia_positive = giardia_pos,
    Wash_malaria_coinfection = Wash_malaria_coinf,
    STH_malaria_coinfection = STH_malaria_coinf,
    Protozoan_malaria_coinfection = Protozoan_malaria_coinf,
    SCHISTO_malaria_coinfection = SCHISTO_malaria_coinf
  )

# Relabel variables for labels
var_label(mergeData_coinfections_table) <- list(
  Age_category = "Age category", 
  Gender = "Gender", 
  Walking_time_from_water_source = "Walking time from water source", 
  Water_contact_frequency = "Water contact frequency", 
  Hand_washing_habit = "Hand washing habit after using the toilet", 
  ITN_use_frequency = "ITN use frequency",
  Type_of_toilet = "Type of toilet",
  Cryptosporidium_positive = "C.parvum exposure",
  Taenia_positive = "T.solium exposure",
  Recent_malaria_positive = "Recent P. falciparum exposure" ,
  Strongyloides_positive = "S.stercoralis exposure",
  Historical_malaria_positive = "Historical P. falciparum exposure",
  Malaria_protection_positive = "P. falciparum seroprotection",
  Schistosoma_positive = "S.mansoni exposure",
  Necator_positive = "N.americanus exposure" ,
  Giardia_positive = "G.lamblia  exposure" ,
  Wash_malaria_coinfection = "WASH pathogens+P. falciparum exposure",
  STH_malaria_coinfection = "STH+P. falciparum  exposure",
  Protozoan_malaria_coinfection = "Intestinal protozoa+P. falciparum  exposure",
  SCHISTO_malaria_coinfection = "S,mansoni+P. falciparum  exposure"
)

###### Start generating tables 

### Demographic table (descriptive)

table <- mergeData_coinfections_table %>% select(Age_category, Site, Gender, Walking_time_from_water_source, Water_contact_frequency, Hand_washing_habit, ITN_use_frequency, Type_of_toilet)

table %>% tbl_summary(
  missing = "no",
  statistic = list(
    all_continuous() ~ "{mean} ({sd})",
    all_categorical() ~ "{n} / {N} ({p}%)"
  ),
  digits = all_continuous() ~ 2
)

### Coinfections table
table_coinf_age <- mergeData_coinfections_table %>% select(
  Age_category, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive, 
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, STH_malaria_coinfection, Protozoan_malaria_coinfection, SCHISTO_malaria_coinfection
)

table_coinf_Site <- mergeData_coinfections_table %>% select(
  Site, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive,
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, STH_malaria_coinfection, Protozoan_malaria_coinfection, SCHISTO_malaria_coinfection
)

#remove blank values from gender
mergeData_coinfections_table <- mergeData_coinfections_table %>%
  filter(Gender != "")

table_coinf_sex<- mergeData_coinfections_table %>% select(
  Gender, Cryptosporidium_positive, Taenia_positive, Strongyloides_positive, Historical_malaria_positive, Malaria_protection_positive, Recent_malaria_positive,
  Schistosoma_positive, Necator_positive, Giardia_positive, Wash_malaria_coinfection, STH_malaria_coinfection, Protozoan_malaria_coinfection, SCHISTO_malaria_coinfection
)

# Create the summary table and add p-values using t-test
summary_table_age <- table_coinf_age %>%
  tbl_summary(by = Age_category) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci() %>%
  # Adding spanning header
  as_gt() %>%
  gt::tab_row_group(
    group = "Multiple pathogen exposure",
    rows = 10:13
  ) %>%
  gt::tab_row_group(
    group = "Single pathogen exposure",
    rows = 1:9
  )

# Display the table
summary_table_age

# Create the summary table and add p-values using t-test
summary_table_site <- table_coinf_Site %>%
  tbl_summary(by = Site) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci() %>%
  # Adding spanning header
  as_gt() %>%
  gt::tab_row_group(
    group = "Multiple pathogen exposure",
    rows = 10:13
  ) %>%
  gt::tab_row_group(
    group = "Single pathogen exposure",
    rows = 1:9
  )

# Display the table
summary_table_site

# Create the summary table and add p-values using t-test
summary_table_sex <- table_coinf_sex %>%
  tbl_summary(by = Gender) %>%
  add_p(test = everything() ~ "t.test") %>%
  add_overall() %>%
  add_ci() %>%
  # Adding spanning header
  as_gt() %>%
  gt::tab_row_group(
    group = "Multiple pathogen exposure",
    rows = 10:13
  ) %>%
  gt::tab_row_group(
    group = "Single pathogen exposure",
    rows = 1:9
  )

# Display the table
summary_table_sex

# Export the table to an HTML file
gtsave(table_summ, "summary_table.html")
gtsave(summary_table_site, "summary_table_site.html")
gtsave(summary_table_age, "summary_table_age.html")
gtsave(summary_table_sex, "summary_table_sex.html")

#separate age and gender by site-------------------

# List of unique sites
sites <- unique(mergeData_coinfections_table$Site)

# Function to create summary table for a given site
create_summary_table <- function(data, by_var, group_var, group_labels, title) {
  data %>%
    tbl_summary(by = !!sym(by_var)) %>%
    add_p(test = everything() ~ "t.test") %>%
    add_overall() %>%
    add_ci() %>%
    # Adding spanning headers
    as_gt() %>%
    gt::tab_row_group(
      group = group_labels[2],
      rows = which(colnames(data) %in% group_var[2])
    ) %>%
    gt::tab_row_group(
      group = group_labels[1],
      rows = which(colnames(data) %in% group_var[1])
    ) %>%
    gt::tab_header(title = title)
}

# Loop through each site and create tables for age and gender
for (site in sites) {
  # Filter data for the current site
  site_data <- mergeData_coinfections_table %>% filter(Site == site)
  
  # Define columns for single and multiple pathogen exposures
  single_exposures <- c("Cryptosporidium_positive", "Taenia_positive", "Strongyloides_positive", 
                        "Historical_malaria_positive", "Malaria_protection_positive", "Recent_malaria_positive", 
                        "Schistosoma_positive", "Necator_positive", "Giardia_positive")
  multiple_exposures <- c("Wash_malaria_coinfection", "STH_malaria_coinfection", 
                          "Protozoan_malaria_coinfection", "SCHISTO_malaria_coinfection")
  
  # Create summary tables
  summary_table_age <- create_summary_table(
    site_data %>% select(Age_category, all_of(single_exposures), all_of(multiple_exposures)),
    "Age_category", list(single_exposures, multiple_exposures), 
    c("Single pathogen exposure", "Multiple pathogen exposure"),
    paste("IgG antibody levels by age for site", site)
  )
  
  summary_table_gender <- create_summary_table(
    site_data %>% select(Gender, all_of(single_exposures), all_of(multiple_exposures)),
    "Gender", list(single_exposures, multiple_exposures), 
    c("Single pathogen exposure", "Multiple pathogen exposure"),
    paste("IgG antibody levels by gender for site", site)
  )
  
  # Display the tables
  print(summary_table_age)
  print(summary_table_gender)
  
  # Save the tables to HTML files
  gtsave(summary_table_age, paste0("summary_table_age_site_", site, ".html"))
  gtsave(summary_table_gender, paste0("summary_table_gender_site_", site, ".html"))
}
